
@Test
void testUnmarshallIntValue() {
    String xml = "<methodResponse><params><param><value><int>42</int></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals(42, response.getReturnValue());
}

@Test
void testUnmarshallBooleanValue() {
    String xml = "<methodResponse><params><param><value><boolean>1</boolean></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertTrue((Boolean) response.getReturnValue());
}

@Test
void testUnmarshallStringValue() {
    String xml = "<methodResponse><params><param><value><string>Hello World!</string></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals("Hello World!", response.getReturnValue());
}

@Test
void testUnmarshallDoubleValue() {
    String xml = "<methodResponse><params><param><value><double>3.14159265359</double></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals(3.14159265359, (Double) response.getReturnValue(), 0.0001);
}

@Test
void testUnmarshallDateValue() {
    String xml = "<methodResponse><params><param><value><dateTime.iso8601>2023-03-30T12:34:56Z</dateTime.iso8601></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals(new Date(1671225296000L), response.getReturnValue());
}

@Test
void testUnmarshallBase64Value() {
    String xml = "<methodResponse><params><param><value><base64>SGVsbG8gV29ybGQh</base64></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertArrayEquals("Hello World!".getBytes(), (byte[]) response.getReturnValue());
}

@Test
void testUnmarshallNullValue() {
    String xml = "<methodResponse><params><param><value><nil/></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertNull(response.getReturnValue());
}

@Test
void testUnmarshallStructValue() {
    String xml = "<methodResponse><params><param><value><struct><member><name>foo</name><value><string>bar</string></value></member></struct></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    Map<String, Object> map = (Map<String, Object>) response.getReturnValue();
    assertEquals("bar", map.get("foo"));
}

@Test
void testUnmarshallArrayValue() {
    String xml = "<methodResponse><params><param><value><array><data><value><string>foo</string></value><value><string>bar</string></value></data></array></value></param></params></methodResponse>";
    XmlRpcResponse response = XmlRpcResponse.unmarshallXmlRpc(xml);
    List<Object>

@Test
public void testUnmarshallXmlRpc_StructValue_ReturnsMap() {
    String xml = "<?xml version=\"1.0\"?><methodResponse><params><param><value><struct><member><name>name1</name><value><string>value1</string></value></member><member><name>name2</name><value><int>42</int></value></member></struct></value></param></params></methodResponse>";
    Object expected = new HashMap<String, Object>();
    Map<String, Object> struct = new HashMap<>();
    struct.put("name1", "value1");
    struct.put("name2", 42);
    expected.put("struct", struct);
    Object actual = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals(expected, actual);
}

@Test
public void testUnmarshallXmlRpc_ArrayValue_ReturnsList() {
    String xml = "<?xml version=\"1.0\"?><methodResponse><params><param><value><array><data><value><int>42</int></value><value><boolean>1</boolean></value><value><string>Hello, world!</string></value></data></array></value></param></params></methodResponse>";
    Object expected = Arrays.asList(42, true, "Hello, world!");
    Object actual = XmlRpcResponse.unmarshallXmlRpc(xml);
    assertEquals(expected, actual);
}

@Test(expected = RuntimeException.class)
public void testUnmarshallXmlRpc_UnknownValue_ThrowsRuntimeException() {
    String xml = "<?xml version=\"1.0\"?><methodResponse><params><param><value><unknown>value</unknown></value></param></params></methodResponse>";
    XmlRpcResponse.unmarshallXmlRpc(xml);
}

@Test(expected = RuntimeException.class)
public void testUnmarshallXmlRpc_MalformedXml_ThrowsRuntimeException() {
    String xml = "<methodResponse><params><param><value><int>42</int></value></param></params></methodResponse>";
    XmlRpcResponse.unmarshallXmlRpc(xml);
}
